<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Document</title>
</head>
<body>
	
	<script>
	//获取节点的方法
	//document.getElementById('id名 ');==>通过id获取节点 (效率最高 性能最优)
	//dom对象.getElementsByTagName('标签名')
	//通过标签名获取 节点的集合(伪数组)
	
	//dom对象.getElmentsByClassName('类名')
	//通过类名获取节点的集合(伪数组)
	
	//dom对象.getElementsByName('name名');
	//通过name名来获取节点的集合(伪数组)
	
	//dom对象.querySelector('div'); 通过标签名、类名、id名来获取首个节点
	//dom对象.querySelectorAll(''); 通过标签名、类名、id名获取全部节点
	
	//节点的三个属性
//		    nodeName 		  nodeValue 		    nodeType 
//元素节点	  大写的标签名		     null		      1
//属性节点	   属性名		     属性值		      2
//文本节点	   #text 		     文本内容 		      3
//注释节点	   #comment		     注释内容		      8
//文档节点	   #document 		     null		      9

//节点的默认属性 
//children  默认保存着节点的所有子元素节点
//childNodes 默认保存着节点的所有子节点

//innerHTML 获取或设置标签 文本内容或元素
//innerText	获取或设置标签 文本内容

//操作属性的方法和属性
//node.getAttribute(属性名)  获取属性
//node.setAttribute(属性名,属性值); 设置属性
//node.removeAttribute(属性名) 删除属性
//attributes 默认保存这节点属性的集合

//操作类名的属性
//className 设置(清空)或获取节点的类名 它默认保存着所有的类名(字符串)
//classList 有4个方法 
//add() 增加类
//remove() 删除类
//contains() 查找类 查找该节点类名中 是否存在某类 存在返回true 否则返回false
//item() 通过下标返回相应的类名 

//操作行内样式的属性
//dom元素.style.样式名(驼峰)='样式值';
//style.cssText 
//dom元素.style.cssText='样式名1:样式值1; 样式名2:样式值2;...'

//dom 0级事件 
// dom对象.on+'事件名'=function(){
// 	//执行代码块;
// }

/*dom对象.on+'事件名'=function(){
	//执行函数;
	//fn();
}
function fn(){

}*/

/*dom对象.on+"事件名"=函数名;*/

//鼠标事件 
// click 单击
//dblclick 双击
//mouseup 抬起
//mousedown 按下
//mouseover 移入
//mouseout 移出
//mousemove 移动

//焦点事件
//blur 失去焦点
//focus 获取焦点

//键盘事件
//keyup keydown keypress

//UI事件
//change改变事件

//创建元素
//document.createElement('创建的元素');
//创建文本内容
//document.createTextNode('创建的文本内容');

//操作节点方法
//appendChild 追加节点
//dom对象.appendChild(被追加的元素);

//insertBefore 插入节点
//dom对象.insertBefore(插入的节点,插入的位置);

//replaceChild 替换节点
//dom对象.replaceChild(新节点,被替换的节点);

//removeChild 删除节点
//dom对象.removeChild(被删除的节点)

//parentNode 获取父节点

//firstChild lastChild nextSibling previousSibling  
//都有兼容问题 默认可以识别任意类型节点 
//解决方法: 属性中添加Element 只能识别元素节点
/*父节点.firstChild==> 获取父节点的首个子(元素)节点
父节点.lastChild==>  获取父节点的最后一个子(元素)节点

兄弟节点.nextSibling==> 获取下一个(元素)兄弟节点
兄弟节点.previousSibling==> 获取上一个(元素)兄弟节点*/












//获取标签名的属性?  nodeName tagName



	</script>
</body>
</html>